{"ast":null,"code":"import React from \"react\";\nimport Modal from \"./Modal\";\nimport \"./modal.css\";\nimport image from \"./12891.png.avif\";\nimport Counter from \"./Counter\";\nimport sample_text from \"./Kindle.Highlights_The.Crisis.of.Islam\";\n\nfunction Parser() {\n  let notesJson = JSON.parse(JSON.stringify(sample_text));\n  let allNotes = notesJson.highlights; // console.log (allNotes[1]);\n  // for (let val in allNotes){\n  //    console.log  ( allNotes [val].text);\n  // }\n\n  const randomNote = allNotes[Math.floor(Math.random() * allNotes.length)];\n  return randomNote.text; // for (note in notesJson){\n  //     if (note instanceof (Object)){\n  //     }\n}\n\nexport default Parser;","map":{"version":3,"sources":["D:/Libraries/Documents/GitHub/Sphinx/client/src/Parser.js"],"names":["React","Modal","image","Counter","sample_text","Parser","notesJson","JSON","parse","stringify","allNotes","highlights","randomNote","Math","floor","random","length","text"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,aAAP;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,WAAP,MAAwB,yCAAxB;;AAGA,SAASC,MAAT,GAAmB;AACf,MAAIC,SAAS,GAAEC,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,SAAL,CAAeL,WAAf,CAAZ,CAAf;AACA,MAAIM,QAAQ,GAAGJ,SAAS,CAACK,UAAzB,CAFe,CAGf;AACA;AACA;AACA;;AACA,QAAMC,UAAU,GAAGF,QAAQ,CAACG,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,QAAQ,CAACM,MAApC,CAAD,CAA3B;AACA,SAAOJ,UAAU,CAACK,IAAlB,CARe,CASX;AACJ;AAEA;AAGH;;AACD,eAAeZ,MAAf","sourcesContent":["import React from \"react\";\r\nimport Modal from \"./Modal\";\r\nimport \"./modal.css\";\r\nimport image from \"./12891.png.avif\"\r\nimport Counter from \"./Counter\"\r\nimport sample_text from \"./Kindle.Highlights_The.Crisis.of.Islam\"\r\n\r\n\r\nfunction Parser () {\r\n    let notesJson= JSON.parse (JSON.stringify(sample_text));\r\n    let allNotes = notesJson.highlights;\r\n    // console.log (allNotes[1]);\r\n    // for (let val in allNotes){\r\n    //    console.log  ( allNotes [val].text);\r\n    // }\r\n    const randomNote = allNotes[Math.floor(Math.random() * allNotes.length)];\r\n    return randomNote.text\r\n        // for (note in notesJson){\r\n    //     if (note instanceof (Object)){\r\n\r\n    //     }\r\n    \r\n\r\n}\r\nexport default Parser;"]},"metadata":{},"sourceType":"module"}