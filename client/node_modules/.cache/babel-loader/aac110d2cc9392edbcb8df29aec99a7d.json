{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"D:/Libraries/Documents/GitHub/Sphinx/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/Libraries/Documents/GitHub/Sphinx/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"D:\\\\Libraries\\\\Documents\\\\GitHub\\\\Sphinx\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Table from \"./Table\";\nimport logo from \"./logo.svg\";\n\nclass App extends Component {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n    this.state = {\n      response: '',\n      post: '',\n      responseToPost: '',\n      show: false,\n      columns: [\"Book \", \"Author \", \"Total Notes \", \"No. of Notes\", \"Note Content\"],\n      noteData: []\n    };\n\n    this.showModal = () => {\n      this.setState({\n        show: true\n      });\n    };\n\n    this.hideModal = () => {\n      this.setState({\n        show: false\n      });\n    };\n\n    this.getNoteData = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, body;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"/api/notes\");\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return response.json();\n\n          case 5:\n            body = _context.sent;\n\n            if (!(response.status !== 200)) {\n              _context.next = 8;\n              break;\n            }\n\n            throw Error(body.message);\n\n          case 8:\n            _this.setState({\n              noteData: body\n            });\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    this.callApi = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var response, body;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return fetch('/api/hello');\n\n          case 2:\n            response = _context2.sent;\n            _context2.next = 5;\n            return response.json();\n\n          case 5:\n            body = _context2.sent;\n\n            if (!(response.status !== 200)) {\n              _context2.next = 8;\n              break;\n            }\n\n            throw Error(body.message);\n\n          case 8:\n            return _context2.abrupt(\"return\", body);\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }));\n\n    this.handleSubmit = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(e) {\n        var response, body;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              e.preventDefault();\n              _context3.next = 3;\n              return fetch('/api/world', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  post: _this.state.post\n                })\n              });\n\n            case 3:\n              response = _context3.sent;\n              _context3.next = 6;\n              return response.text();\n\n            case 6:\n              body = _context3.sent;\n\n              _this.setState({\n                responseToPost: body\n              });\n\n            case 8:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }));\n\n      return function (_x) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n  }\n\n  componentDidMount() {\n    this.callApi().then(res => this.setState({\n      response: res.express\n    })).catch(err => console.log(err));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          className: \"App-logo\",\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"src/App.js\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 18\n          }, this), \" and save to reload.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.getNoteData,\n          children: \" Load Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.response\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Post to Server:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.post,\n          onChange: e => this.setState({\n            post: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.responseToPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        columns: this.state.columns,\n        noteData: this.state.noteData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/Libraries/Documents/GitHub/Sphinx/client/src/App.js"],"names":["React","Component","Table","App","state","response","post","responseToPost","show","columns","noteData","showModal","setState","hideModal","getNoteData","fetch","json","body","status","Error","message","callApi","handleSubmit","e","preventDefault","method","headers","JSON","stringify","text","componentDidMount","then","res","express","catch","err","console","log","render","logo","target","value"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAGA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAAA;AAAA;;AAAA;AAAA;AAAA,SAC1BG,KAD0B,GAClB;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,IAAI,EAAE,EAFA;AAGNC,MAAAA,cAAc,EAAE,EAHV;AAINC,MAAAA,IAAI,EAAE,KAJA;AAKNC,MAAAA,OAAO,EAAE,CACP,OADO,EAEP,SAFO,EAGP,cAHO,EAIP,cAJO,EAKP,cALO,CALH;AAaNC,MAAAA,QAAQ,EAAG;AAbL,KADkB;;AAAA,SAiB1BC,SAjB0B,GAiBd,MAAM;AAChB,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,IAAI,EAAE;AAAR,OAAd;AACD,KAnByB;;AAAA,SAqB1BK,SArB0B,GAqBd,MAAM;AAChB,WAAKD,QAAL,CAAc;AAAEJ,QAAAA,IAAI,EAAE;AAAR,OAAd;AACD,KAvByB;;AAAA,SAyB5BM,WAzB4B,yEAyBd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACWC,KAAK,CAAE,YAAF,CADhB;;AAAA;AACNV,YAAAA,QADM;AAAA;AAAA,mBAEOA,QAAQ,CAACW,IAAT,EAFP;;AAAA;AAENC,YAAAA,IAFM;;AAAA,kBAIRZ,QAAQ,CAACa,MAAT,KAAmB,GAJX;AAAA;AAAA;AAAA;;AAAA,kBAIsBC,KAAK,CAAEF,IAAI,CAACG,OAAP,CAJ3B;;AAAA;AAKZ,YAAA,KAAI,CAACR,QAAL,CAAe;AAAEF,cAAAA,QAAQ,EAAGO;AAAb,aAAf;;AALY;AAAA;AAAA;AAAA;AAAA;AAAA,KAzBc;AAAA,SAyC1BI,OAzC0B,yEAyChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACeN,KAAK,CAAC,YAAD,CADpB;;AAAA;AACFV,YAAAA,QADE;AAAA;AAAA,mBAEWA,QAAQ,CAACW,IAAT,EAFX;;AAAA;AAEFC,YAAAA,IAFE;;AAAA,kBAIJZ,QAAQ,CAACa,MAAT,KAAoB,GAJhB;AAAA;AAAA;AAAA;;AAAA,kBAI2BC,KAAK,CAACF,IAAI,CAACG,OAAN,CAJhC;;AAAA;AAAA,8CAMDH,IANC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAzCgB;;AAAA,SAkD1BK,YAlD0B;AAAA,2EAkDX,kBAAMC,CAAN;AAAA;AAAA;AAAA;AAAA;AACbA,cAAAA,CAAC,CAACC,cAAF;AADa;AAAA,qBAEUT,KAAK,CAAC,YAAD,EAAe;AACzCU,gBAAAA,MAAM,EAAE,MADiC;AAEzCC,gBAAAA,OAAO,EAAE;AACP,kCAAgB;AADT,iBAFgC;AAKzCT,gBAAAA,IAAI,EAAEU,IAAI,CAACC,SAAL,CAAe;AAAEtB,kBAAAA,IAAI,EAAE,KAAI,CAACF,KAAL,CAAWE;AAAnB,iBAAf;AALmC,eAAf,CAFf;;AAAA;AAEPD,cAAAA,QAFO;AAAA;AAAA,qBASMA,QAAQ,CAACwB,IAAT,EATN;;AAAA;AASPZ,cAAAA,IATO;;AAWb,cAAA,KAAI,CAACL,QAAL,CAAc;AAAEL,gBAAAA,cAAc,EAAEU;AAAlB,eAAd;;AAXa;AAAA;AAAA;AAAA;AAAA;AAAA,OAlDW;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAmC1Ba,EAAAA,iBAAiB,GAAG;AAClB,SAAKT,OAAL,GACGU,IADH,CACQC,GAAG,IAAI,KAAKpB,QAAL,CAAc;AAAEP,MAAAA,QAAQ,EAAE2B,GAAG,CAACC;AAAhB,KAAd,CADf,EAEGC,KAFH,CAESC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFhB;AAGD;;AAyBDG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA,gCACE;AAAK,UAAA,GAAG,EAAEC,IAAV;AAAgB,UAAA,SAAS,EAAC,UAA1B;AAAqC,UAAA,GAAG,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,2CACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADP;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAKE;AAAQ,UAAA,OAAO,EAAI,KAAKzB,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAWE;AAAA,kBAAI,KAAKV,KAAL,CAAWC;AAAf;AAAA;AAAA;AAAA;AAAA,cAXF,eAeE;AAAM,QAAA,QAAQ,EAAE,KAAKiB,YAArB;AAAA,gCACE;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,KAAK,EAAE,KAAKlB,KAAL,CAAWE,IAFpB;AAGE,UAAA,QAAQ,EAAEiB,CAAC,IAAI,KAAKX,QAAL,CAAc;AAAEN,YAAAA,IAAI,EAAEiB,CAAC,CAACiB,MAAF,CAASC;AAAjB,WAAd;AAHjB;AAAA;AAAA;AAAA;AAAA,gBAJF,eASE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF,eA0BE;AAAA,kBAAI,KAAKrC,KAAL,CAAWG;AAAf;AAAA;AAAA;AAAA;AAAA,cA1BF,eA2BE,QAAC,KAAD;AAAO,QAAA,OAAO,EAAE,KAAKH,KAAL,CAAWK,OAA3B;AAAoC,QAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWM;AAAzD;AAAA;AAAA;AAAA;AAAA,cA3BF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAiCD;;AAlGyB;;AAqG5B,eAAeP,GAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Table from \"./Table\"\r\nimport logo from './logo.svg';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    response: '',\r\n    post: '',\r\n    responseToPost: '',\r\n    show: false,\r\n    columns: [\r\n      \"Book \",\r\n      \"Author \",\r\n      \"Total Notes \",\r\n      \"No. of Notes\",\r\n      \"Note Content\"\r\n\r\n    ],\r\n    noteData : []\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({ show: true });\r\n  };\r\n\r\n  hideModal = () => {\r\n    this.setState({ show: false });\r\n  };\r\n\r\ngetNoteData = async () => {\r\n  const response = await fetch (\"/api/notes\");\r\n  const body = await response.json ();\r\n  // console.log (bodega);\r\n  if (response.status !==200) throw Error (body.message);\r\n  this.setState ({ noteData : body});\r\n  \r\n  \r\n}  \r\n\r\n  componentDidMount() {\r\n    this.callApi()\r\n      .then(res => this.setState({ response: res.express }))\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  callApi = async () => {\r\n    const response = await fetch('/api/hello');\r\n    const body = await response.json();\r\n\r\n    if (response.status !== 200) throw Error(body.message);\r\n\r\n    return body;\r\n  };\r\n\r\n  handleSubmit = async e => {\r\n    e.preventDefault();\r\n    const response = await fetch('/api/world', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ post: this.state.post }),\r\n    });\r\n    const body = await response.text();\r\n\r\n    this.setState({ responseToPost: body });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n          <p>\r\n            Edit <code>src/App.js</code> and save to reload.\r\n          </p>\r\n          <button onClick = {this.getNoteData}> Load Notes</button>\r\n          \r\n        \r\n\r\n        </header>\r\n        <p>{this.state.response}</p>\r\n    \r\n\r\n\r\n        <form onSubmit={this.handleSubmit}>\r\n          <p>\r\n            <strong>Post to Server:</strong>\r\n          </p>\r\n          <input\r\n            type=\"text\"\r\n            value={this.state.post}\r\n            onChange={e => this.setState({ post: e.target.value })}\r\n          />\r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n        <p>{this.state.responseToPost}</p>\r\n        <Table columns={this.state.columns} noteData={this.state.noteData} />\r\n        \r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}