{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"D:/Libraries/Documents/GitHub/Sphinx/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/Libraries/Documents/GitHub/Sphinx/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"D:\\\\Libraries\\\\Documents\\\\GitHub\\\\Sphinx\\\\client\\\\src\\\\Table.js\";\nimport React, { Component } from 'react';\nimport \"./table.css\";\nimport ReactModal from 'react-modal';\n\nclass Table extends Component {\n  constructor(props) {\n    var _this;\n\n    super(props);\n    _this = this;\n\n    this.getNoteData = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(name) {\n        var response, body;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('/api/notespec', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  post: name.target.value\n                })\n              });\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.text();\n\n            case 5:\n              body = _context.sent;\n\n              _this.setState.notes({\n                notes: body\n              });\n\n              _this.handleOpenModal();\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    this.state = {\n      currName: '',\n      notes: [],\n      showModal: false\n    }; //  this.handleOpenModal = this.handleOpenModal.bind(this);\n    //  this.handleCloseModal = this.handleCloseModal.bind(this);\n  }\n\n  handleOpenModal() {\n    this.setState({\n      showModal: true\n    });\n  }\n\n  handleCloseModal() {\n    this.setState({\n      showModal: false\n    });\n  }\n\n  renderTableHeader() {\n    let header = this.props.columns; //  console.log (header);\n\n    return header.map((key, index) => {\n      return /*#__PURE__*/_jsxDEV(\"th\", {\n        children: key.toUpperCase()\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 18\n      }, this);\n    });\n  }\n\n  renderTableData() {\n    return this.props.noteData.map((student, index) => {\n      const filepath = student.filepath,\n            title = student.title,\n            authors = student.authors,\n            contentLen = student.contentLen,\n            name = student.name; //destructuring\n\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: index\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: authors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: contentLen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.getNoteData,\n            value: name,\n            children: \" Click for Notes \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)]\n      }, filepath, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 14\n      }, this);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"title\",\n        children: \"React Dynamic Table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        id: \"books\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: this.renderTableHeader()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 20\n          }, this), this.renderTableData()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(ReactModal, {\n        isOpen: this.state.showModal,\n        contentLabel: \"Minimal Modal Example\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleCloseModal,\n          children: \"Close Modal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default Table;","map":{"version":3,"sources":["D:/Libraries/Documents/GitHub/Sphinx/client/src/Table.js"],"names":["React","Component","ReactModal","Table","constructor","props","getNoteData","name","fetch","method","headers","body","JSON","stringify","post","target","value","response","text","setState","notes","handleOpenModal","state","currName","showModal","handleCloseModal","renderTableHeader","header","columns","map","key","index","toUpperCase","renderTableData","noteData","student","filepath","title","authors","contentLen","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport \"./table.css\"\r\nimport ReactModal from 'react-modal';\r\n\r\n\r\nclass Table extends Component {\r\n    constructor(props) {\r\n       super(props)\r\n       this.state = {\r\n          currName : '',\r\n          notes: [],\r\n          showModal : false\r\n       }\r\n   //  this.handleOpenModal = this.handleOpenModal.bind(this);\r\n   //  this.handleCloseModal = this.handleCloseModal.bind(this);\r\n }\r\n\r\n  \r\n  \r\n  handleOpenModal () {\r\n    this.setState({ showModal: true });\r\n  }\r\n  \r\n  handleCloseModal () {\r\n    this.setState({ showModal: false });\r\n  }\r\n\r\n    getNoteData = async name => {\r\n\r\n      const response = await  fetch('/api/notespec', {\r\n         method: 'POST',\r\n         headers: {\r\n           'Content-Type': 'application/json',\r\n         },\r\n         body: JSON.stringify({ post: name.target.value }),\r\n       });\r\n       const body = await  response.text();\r\n       this.setState.notes ({notes: body});\r\n       this.handleOpenModal ();\r\n      \r\n      \r\n    }  \r\n    \r\n \r\n    renderTableHeader() {\r\n       let header = this.props.columns\r\n      //  console.log (header);\r\n       return header.map((key, index) => {\r\n          return <th key={index}>{key.toUpperCase()}</th>\r\n       })\r\n    }\r\n \r\n    renderTableData() {\r\n       return this.props.noteData.map((student, index) => {\r\n          const { filepath, title, authors, contentLen,name } = student //destructuring\r\n          \r\n          return (\r\n             <tr key={filepath}>\r\n                <td>{index}</td>\r\n                <td>{title}</td>\r\n                <td>{authors}</td>\r\n                <td>{contentLen}</td>\r\n                <td><button onClick={this.getNoteData} value={name} > Click for Notes </button> </td>\r\n             </tr>\r\n          )\r\n       })\r\n    }\r\n \r\n    render() {\r\n       return (\r\n          <div>\r\n             <h1 id='title'>React Dynamic Table</h1>\r\n             <table id='books'>\r\n                <tbody>\r\n                   <tr>{this.renderTableHeader()}</tr>\r\n                   {this.renderTableData()}\r\n                </tbody>\r\n             </table>\r\n             <ReactModal \r\n           isOpen={this.state.showModal}\r\n           contentLabel=\"Minimal Modal Example\"\r\n        >\r\n          <button onClick={this.handleCloseModal}>Close Modal</button>\r\n        </ReactModal>\r\n      </div>\r\n        \r\n       )\r\n    }\r\n }\r\n \r\n export default Table;"]},"metadata":{},"sourceType":"module"}